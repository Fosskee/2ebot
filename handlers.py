import config
import server
import kb
from aiogram import F, Router, types, Bot
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from aiogram.types.callback_query import CallbackQuery
from states import DialogsState


from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove


router = Router()
bot = Bot(token=config.BOT_TOKEN)


@router.message(Command("start"))
async def start_handler(msg: Message, state: FSMContext):
    await msg.answer(text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á –¥–ª—è –∫–æ–º–∞–Ω–¥—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤!\n\n <b>–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?</b>", reply_markup=kb.menu)

@router.callback_query(F.data == "add_task")
async def add_task_dialog(clbck: CallbackQuery, state: FSMContext):
    await clbck.message.answer(text="–ù–∞–ø–∏—à–∏ –∑–∞–¥–∞—á—É –∏ —Å–µ—Ä–≤–µ—Ä –ø–æ–¥–±–µ—Ä—ë—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –≤—Ä–µ–º—è –∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è ‚ú®")
    await state.set_state(DialogsState.add_task)

@router.message(DialogsState.add_task)
async def add_task(msg: Message, state: FSMContext):
    await msg.answer(server.add_task(msg.text), reply_markup=kb.menu)
    await state.clear()

@router.callback_query(F.data == "list_tasks")
async def list_tasks_dialog(clbck: CallbackQuery, state: FSMContext):
    await clbck.message.answer(text="–ó–∞–¥–∞—á–∏ –∫–∞–∫–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤—ã–≤–µ—Å—Ç–∏? üë§", reply_markup=kb.names)
    await state.set_state(DialogsState.choose_student)

@router.callback_query(DialogsState.choose_student)
async def add_task(clbck: CallbackQuery, state: FSMContext):
    tasks = []
    for task in (server.list_tasks(clbck.data)): tasks.append([InlineKeyboardButton(text="‚ùå " + task, callback_data=task)])
    tasks = InlineKeyboardMarkup(inline_keyboard=tasks)
    await clbck.message.answer(f'—Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –¥–ª—è <b>{clbck.data}</b> üë§\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–∞–¥–∞—á—É, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ—ë üöÆ', reply_markup=tasks)
    await state.set_state(DialogsState.remove_task)

@router.callback_query(DialogsState.remove_task)
async def remove_task(clbck: Message, state: FSMContext):
    await clbck.message.answer(server.remove_task(clbck.data), reply_markup=kb.menu)
    await state.clear()